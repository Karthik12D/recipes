openapi: 3.0.3
info:
  title: Recipe Management Application
  description: Recipe Management Application
  version: 1.0.0
servers:
  - url: 'https://localhost:8080/swagger-ui.html'
paths:
  /api/v1/recipe/page/{page}/{size}: # <--- This is the path for the Recipe API
    get:
      tags:
        - recipe
      summary: Get all recipes
      operationId: getAllRecipes
      parameters:
        - name: page
          in: path
          required: true
          description: Page number
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeResponse'
        '400':
          description: Invalid page or size supplied
  /api/v1/recipe/{recipeId}: # <--- This is the path for the Recipe API
    get:
      tags:
        - recipe
      summary: Get recipe by ID
      operationId: getRecipeById
      parameters:
        - name: recipeId
          in: path
          required: true
          description: ID of the recipe to return
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RecipeResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Recipe not found
    delete:
      tags:
        - recipe
      summary: Delete recipe by ID
      operationId: deleteRecipeById
      parameters:
        - name: recipeId
          in: path
          required: true
          description: ID of the recipe to delete
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Recipe deleted
        '400':
          description: Invalid ID supplied
        '404':
          description: Recipe not found
  /api/v1/recipe:
    post:
      tags:
        - recipe
      summary: Add a new recipe
      operationId: addRecipe
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/RecipeRequest'
      responses:
        '201':
          description: Recipe created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeResponse'
        '400':
          description: Invalid input
    put:
      tags:
        - recipe
      summary: Update an existing recipe
      operationId: updateRecipe
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/RecipeRequest'
      responses:
        '200':
          description: Recipe updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Recipe not found
  /api/v1/recipe/search:
    post: # <--- This is the path for the Recipe API
      tags:
        - recipe
      summary: Search recipes
      operationId: searchRecipes
      parameters:
        - name: page
          in: query
          required: true
          description: Page number
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          description: Page size
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/RecipeSearchRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeResponse'
        '400':
          description: Invalid input
  /api/v1/ingredient/page/{page}/{size}: # <--- This is the path for the Ingredient API
    get:
      tags:
        - ingredient
      summary: Get all ingredients
      operationId: getAllIngredients
      parameters:
        - name: page
          in: path
          required: true
          description: Page number
          schema:
            type: integer
            format: int32
        - name: size
          in: path
          required: true
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IngredientResponse'
        '400':
          description: Invalid page or size supplied
  /api/v1/ingredient/{ingredientId}:
    get:
      tags:
        - ingredient
      summary: Get ingredient by ID
      operationId: getIngredientById
      parameters:
        - name: ingredientId
          in: path
          required: true
          description: ID of the ingredient to return
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/IngredientResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ingredient not found
    delete:
      tags:
        - ingredient
      summary: Delete ingredient by ID
      operationId: deleteIngredientById
      parameters:
        - name: ingredientId
          in: path
          required: true
          description: ID of the ingredient to delete
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ingredient deleted
        '400':
          description: Invalid ID supplied
        '404':
          description: Ingredient not found
  /api/v1/ingredient:
    post:
      tags:
        - ingredient
      summary: Add a new ingredient
      operationId: addIngredient
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/IngredientRequest'
      responses:
        '201':
          description: Ingredient created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientResponse'
        '400':
          description: Invalid input
    put:
      tags:
        - ingredient
      summary: Update an existing ingredient
      operationId: updateIngredient
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/IngredientRequest'
      responses:
        '200':
          description: Ingredient updated
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/IngredientResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ingredient not found
components:
  schemas:
    RecipeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
        numberOfServings:
          type: integer
          format: int32
        createdDate:
          type: date-time
          format: string
        updatedDate:
          type: date-time
          format: string
          pattern: yyyy-MM-dd HH:mm:ss
        instructions:
          type: string
        ingredients:
            type: array
            items:
                $ref: '#/components/schemas/IngredientResponse'
    RecipeRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 50
        type:
          type: string
          $ref: '#/components/schemas/RecipeType'
        numberOfServings:
          type: integer
          format: int32
        instructions:
          type: string
          pattern: ^[a-zA-Z0-9\s\.,-]*$
          maxLength: 200
        ingredients:
            type: array
            items:
              type: integer
      required: [name, type, numberOfServings]
    IngredientResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        createdDate:
          type: date-time
          format: string
        updatedDate:
          type: date-time
          format: string
          pattern: yyyy-MM-dd HH:mm:ss
    IngredientRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
          maxLength: 200
    RecipeType:
      type: string
      enum:
        - VEGETARIAN
        - NON_VEGETARIAN
        - VEGAN
        - SNACK
    SearchCriteria:
      type: object
      properties:
        filterKey:
          type: string
          enum:
            - NAME
            - TYPE
            - NUMBER_OF_SERVINGS
            - INGREDIENTS
            - INSTRUCTIONS
        value:
          type: string
        operation:
          type: string
          enum:
            - EQUALS
            - CONTAINS
            - NOT_CONTAINS
            - NOT_EQUALS
        dataOption:
          type: string
    RecipeSearchRequest:
      type: object
      properties:
        searchCriteria:
          type: array
          items:
            $ref: '#/components/schemas/SearchCriteria'
        dataOption:
          type: string
          enum:
            - ALL
            - ANY
